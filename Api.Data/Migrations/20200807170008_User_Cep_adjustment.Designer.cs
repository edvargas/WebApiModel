// <auto-generated />
using System;
using Apt.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200807170008_User_Cep_adjustment")]
    partial class User_Cep_adjustment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Api.Domain.Entities.CepEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<Guid>("MunicipioId");

                    b.Property<string>("Numero")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("Cep");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Cep");
                });

            modelBuilder.Entity("Api.Domain.Entities.MunicipioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CodIbge");

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<Guid>("UfId");

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("CodIbge");

                    b.HasIndex("UfId");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("Api.Domain.Entities.UfEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("Sigla")
                        .IsUnique();

                    b.ToTable("Uf");

                    b.HasData(
                        new { Id = new Guid("22ffbd18-cdb9-45cc-97b0-51e97700bf71"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Acre", Sigla = "AC" },
                        new { Id = new Guid("7cc33300-586e-4be8-9a4d-bd9f01ee9ad8"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Alagoas", Sigla = "AL" },
                        new { Id = new Guid("cb9e6888-2094-45ee-bc44-37ced33c693a"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Amazonas", Sigla = "AM" },
                        new { Id = new Guid("409b9043-88a4-4e86-9cca-ca1fb0d0d35b"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Amapá", Sigla = "AP" },
                        new { Id = new Guid("5abca453-d035-4766-a81b-9f73d683a54b"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Bahia", Sigla = "BA" },
                        new { Id = new Guid("5ff1b59e-11e7-414d-827e-609dc5f7e333"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Ceará", Sigla = "CE" },
                        new { Id = new Guid("bd08208b-bfca-47a4-9cd0-37e4e1fa5006"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Distrito Federal", Sigla = "DF" },
                        new { Id = new Guid("c623f804-37d8-4a19-92c1-67fd162862e6"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Espírito Santo", Sigla = "ES" },
                        new { Id = new Guid("837a64d3-c649-4172-a4e0-2b20d3c85224"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Goiás", Sigla = "GO" },
                        new { Id = new Guid("57a9e9f7-9aea-40fe-a783-65d4feb59fa8"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Maranhão", Sigla = "MA" },
                        new { Id = new Guid("27f7a92b-1979-4e1c-be9d-cd3bb73552a8"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Minas Gerais", Sigla = "MG" },
                        new { Id = new Guid("3739969c-fd8a-4411-9faa-3f718ca85e70"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Mato Grosso do Sul", Sigla = "MS" },
                        new { Id = new Guid("29eec4d3-b061-427d-894f-7f0fecc7f65f"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Mato Grosso", Sigla = "MT" },
                        new { Id = new Guid("8411e9bc-d3b2-4a9b-9d15-78633d64fc7c"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Pará", Sigla = "PA" },
                        new { Id = new Guid("1109ab04-a3a5-476e-bdce-6c3e2c2badee"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Paraíba", Sigla = "PB" },
                        new { Id = new Guid("ad5969bd-82dc-4e23-ace2-d8495935dd2e"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Pernambuco", Sigla = "PE" },
                        new { Id = new Guid("f85a6cd0-2237-46b1-a103-d3494ab27774"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Piauí", Sigla = "PI" },
                        new { Id = new Guid("1dd25850-6270-48f8-8b77-2f0f079480ab"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Paraná", Sigla = "PR" },
                        new { Id = new Guid("43a0f783-a042-4c46-8688-5dd4489d2ec7"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Rio de Janeiro", Sigla = "RJ" },
                        new { Id = new Guid("542668d1-50ba-4fca-bbc3-4b27af108ea3"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Rio Grande do Norte", Sigla = "RN" },
                        new { Id = new Guid("924e7250-7d39-4e8b-86bf-a8578cbf4002"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Rondônia", Sigla = "RO" },
                        new { Id = new Guid("9fd3c97a-dc68-4af5-bc65-694cca0f2869"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Roraima", Sigla = "RR" },
                        new { Id = new Guid("88970a32-3a2a-4a95-8a18-2087b65f59d1"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Rio Grande do Sul", Sigla = "RS" },
                        new { Id = new Guid("b81f95e0-f226-4afd-9763-290001637ed4"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Santa Catarina", Sigla = "SC" },
                        new { Id = new Guid("fe8ca516-034f-4249-bc5a-31c85ef220ea"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Sergipe", Sigla = "SE" },
                        new { Id = new Guid("e7e416de-477c-4fa3-a541-b5af5f35ccf6"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "São Paulo", Sigla = "SP" },
                        new { Id = new Guid("971dcb34-86ea-4f92-989d-064f749e23c9"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 912, DateTimeKind.Utc), Nome = "Tocantins", Sigla = "TO" }
                    );
                });

            modelBuilder.Entity("Api.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CepId");

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("CepId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new { Id = new Guid("eb61209b-6215-4b8f-b3bf-7c095c39c176"), CepId = new Guid("00000000-0000-0000-0000-000000000000"), CreateAt = new DateTime(2020, 8, 7, 17, 0, 7, 908, DateTimeKind.Utc), Email = "email@email.com", Name = "Administrador", UpdateAt = new DateTime(2020, 8, 7, 17, 0, 7, 909, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("Api.Domain.Entities.CepEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.MunicipioEntity", "Municipio")
                        .WithMany("Ceps")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Domain.Entities.MunicipioEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.UfEntity", "Uf")
                        .WithMany("Municipios")
                        .HasForeignKey("UfId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Domain.Entities.UserEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.CepEntity", "Cep")
                        .WithMany("Users")
                        .HasForeignKey("CepId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
